{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditting","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetsArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c2c4de7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{name,value},\r\n         } = event;\r\n         if(name === \"email\"){\r\n             setEmail(value);\r\n         }else if(name === \"password\"){\r\n             setPassword(value);\r\n         }\r\n   };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else{\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n      };\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit = {onSubmit} className=\"container\">\r\n            <input\r\n                name=\"email\" \r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                required\r\n                value = {email}\r\n                onChange = {onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input\r\n                name=\"password\"\r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required\r\n                value = {password}\r\n                className = \"authInput\"\r\n                onChange = {onChange}\r\n            />\r\n            <input \r\n                type=\"submit\"\r\n                className=\"authInput authSubmit\" \r\n                value={newAccount? \"Create Account\":\"Sign In\"}\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className =\"authSwitch\">\r\n                {newAccount? \"Sign in.\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fBase\";\r\nimport React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faGoogle, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () =>{ \r\n  const onSocialClick = async (event) => {\r\n      const {\r\n          target:{name},\r\n    } = event;\r\n    let provider;\r\n    if(name === \"Google\"){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }else if(name === \"Github\"){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return(\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"3x\"\r\n            style={{marginBottom:30}}\r\n        />\r\n        <AuthForm />\r\n            <div className =\"authBtns\">\r\n                <button onClick={onSocialClick} name = \"Google\" className=\"authBtn\">\r\n                    Continue with Google<FontAwesomeIcon icon = {faGoogle}/>\r\n                </button>\r\n                <button onClick={onSocialClick} name = \"Github\" className=\"authBtn\">\r\n                    Continue with Github<FontAwesomeIcon icon = {faGithub}/>\r\n                </button>\r\n            </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제할까요?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditting = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) =>{\r\n        window.event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return(\r\n        <div className=\"nweet\">\r\n        { editing ? (\r\n            <>\r\n               {isOwner &&\r\n               <> \r\n                <form onSubmit = {onSubmit} className=\"container nweetEdit\">\r\n                    <input \r\n                        type =\"text\" \r\n                        placeholder=\"Edit your Nweet\" \r\n                        value ={newNweet} \r\n                        required\r\n                        autoFocus\r\n                        onChange = {onChange}\r\n                        className=\"formInput\"\r\n                    />\r\n                    <input type = \"submit\" value = \"Update Nweet\" className=\"formBtn\" />\r\n                </form>\r\n                <span onClick = {toggleEditting} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n                }\r\n            </>\r\n            ) : (\r\n            <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src = {nweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                   <div className = \"nweet_actions\">\r\n                       <span onClick={onDeleteClick}>\r\n                           <FontAwesomeIcon icon={faTrash}/>\r\n                       </span>\r\n                       <span onClick={toggleEditting}>\r\n                           <FontAwesomeIcon icon={faPencilAlt}/>\r\n                       </span>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )}   \r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n       if(nweet === \"\"){\r\n           return;\r\n       }\r\n        window.event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text:nweet,\r\n            createAt:Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    \r\n    const onChange = (event)=> {\r\n        const {\r\n            target:{value},\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    \r\n    const onFileChange = (event) => {\r\n         const {target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget:{result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const ClearAttachment= () => setAttachment(\"\");\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className = \"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\" \r\n                    value={nweet} \r\n                    onChange={onChange} \r\n                    type =\"text\" \r\n                    placeholder=\"무슨 일이 일어나고 있나요?\" \r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className =\"factoryInput__label\">\r\n                <span>Add Photos</span>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className = \"factoryForm__attachment\">\r\n                    <img \r\n                        src = {attachment}\r\n                        style={{\r\n                            backgroundImage:attachment,\r\n                        }} \r\n                    />\r\n                    <div className =\"factoryForm__clear\" onClick={ClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport {dbService, storageService} from \"fBase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").orderBy(\"createAt\",\"desc\").onSnapshot((snapshot)=>{\r\n            const nweetsArray = snapshot.docs.map((doc)=>({\r\n                id: doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetsArray);\r\n        });\r\n    },[]);\r\n    \r\n    return (\r\n        <div className = \"container\">\r\n            <NweetFactory userObj = {userObj}></NweetFactory>\r\n            <div style = {{marginTop: 30}}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                    key = {nweet.id} \r\n                    nweetObj = {nweet} \r\n                    isOwner = {nweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) =>(\r\n<nav>\r\n    <ul style={{display:\"flex\", justifyContent:\"center\", marginTop: 50}}>\r\n        <li>\r\n            <Link to=\"/\" style={{marginRight: 10}}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size =\"2x\"/>\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link \r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft:10,\r\n                    display:\"flex\",\r\n                    flexDirection:\"column\",\r\n                    alignItems:\"center\",\r\n                    fontSize:12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color ={\"#04AAFF\"} size = \"2x\" />\r\n                <span style ={{marginTop : 10}}>\r\n                    {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import { authService, dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default({ refreshUser, userObj}) => {\r\n   const history = useHistory();\r\n   const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    \r\n   const OnLogOutClick = () =>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n   };\r\n\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n        .collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n\r\n   useEffect(()=>{\r\n    getMyNweets()\r\n   },[])\r\n\r\n   const onChange = (event) => {\r\n       const{\r\n           target:{value},\r\n       } = event;\r\n       setNewDisplayName(value);\r\n   };\r\n\r\n   const onSubmit = async (event) => {\r\n       window.event.preventDefault();\r\n       if(userObj.displayName !== newDisplayName){\r\n           await userObj.updateProfile({\r\n               displayName : newDisplayName,\r\n           });\r\n           refreshUser();\r\n       }\r\n   }\r\n\r\n    return (\r\n                <div className=\"container\">\r\n                    <form onSubmit = {onSubmit} className=\"profileForm\">\r\n                    <input\r\n                        onChange = {onChange} \r\n                        type = \"text\" \r\n                        autoFocus\r\n                        placeholder = \"DisplayName\"\r\n                        value = {newDisplayName}\r\n                        className = \"formInput\"\r\n                    />\r\n                    <input \r\n                        type = \"submit\" \r\n                        value = \"Update profile\"\r\n                        className=\"formBtn\"\r\n                        style={{\r\n                            marginTop:10,\r\n                        }}\r\n                    />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={OnLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\"\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj = {userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div\r\n                    style={{\r\n                        maxWidth:890,\r\n                        width:\"100%\",\r\n                        margin:\"0 auto\",\r\n                        marginTop: 80,\r\n                        display:\"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj = {userObj} refreshUser = {refreshUser}/>\r\n                </Route>\r\n                </div>\r\n                ):(\r\n                    <>\r\n                        <Route exact path = \"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\"\r\nimport {authService} from \"fBase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  \r\n  useEffect(()=>{\r\n    authService.onAuthStateChanged((user)=>{\r\n      if(user){\r\n        setUserObj({\r\n          displayName:user.displayName,\r\n          uid:user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      }\r\n      else{\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [])\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName:user.displayName,\r\n      uid:user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {init? (\r\n    <AppRouter \r\n      refreshUser = {refreshUser} \r\n      isLoggedIn={Boolean(userObj)} \r\n      userObj={userObj}>\r\n    </AppRouter>\r\n    ) : (\r\n       \"Initializing...\"\r\n    )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport firebase from 'firebase';\r\nimport \"./styles.css\";\r\n\r\nconsole.log(firebase);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}